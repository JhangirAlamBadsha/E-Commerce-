@model MVT.Web.Areas.Dashboard.ViewModels.ProductSearchViewModel



@{
    ViewBag.Title = "ProductTable";


}
<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="resetBtn">Reset</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="newBtn">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@*<div>
        <form method="post">
            <input id="searchTxt" name="search" />
            <button type="button" id="searchBtn">search</button>
        </form>
        <button type="button" id="newBtn">New</button>
    </div>*@


<div>

    <table class="table table-striped">
        <thead>

            <tr>
                <td>Product Name</td>
                <td>Category</td>
                <td>Price</td>
                <td>Actions</td>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {

                foreach (var product in Model.Products)
                {

                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (product.Category != null)
                            {
                                <text>@product.Category.Name</text>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@product.Price</td>
                        <td>
                            <button class="editButton" data-id="@product.ID">Edit</button>
                            <button class="deleteButton" data-id="@product.ID">Delete</button>
                            <button class="addtoCart" data-id="@product.ID">Add to Cart</button>

                        </td>
                    </tr>
                }
            }
            else
            {

                <tr><td class="text-danger" colspan="4">No Products found.</td></tr>
            }

        </tbody>



    </table>
     


    <button class="pageButtons" data-pageno="@(Model.PageNo - 1)">Previous</button>
        <button class="pageButtons" data-pageno="@(Model.PageNo + 1)">Next</button>
</div>















<script>
    $(".pageButtons").click(function () {

        $.ajax({
            //url: '/Product/ProductTable',
            url: '@Url.Action("ProductTable", "Product")',
            data: {
                pageNo: $(this).attr("data-pageNo")
            }

        })
        .done(function (response) {
            $("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("fail");
        });
    });

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
          //  url: '/Product/ProductTable',
             url: '@Url.Action("ProductTable", "Product")',
            data: {
                search: searchValue
            }
        })
        .done(function (response) {

           $("#tableContiner").html(response);


        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("fail");
        });
    });

    $("#newBtn").click(function () {

        $.ajax({
            //url: '/Product/Create',
             url: '@Url.Action("Create", "Product")',

        })
        .done(function (response) {
            $("#actionContiner").html(response);
            focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("fail");
        });
    });
    $("#resetBtn").click(function () {
		var searchValue = '';

		$.ajax({
			url: '@Url.Action("ProductTable", "Product")',//'/Category/CategoryTable',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});
    $(".editButton").click(function () {

        $.ajax({
          //  url: '/Product/Edit',
            url: '@Url.Action("Edit", "Product")',
            data: {
                Id: $(this).attr("data-id")
            }

        })
        .done(function (response) {
            $("#actionContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("fail");
        });
    });

    $(".deleteButton").click(function () {
        var confirmDelete = confirm("Are you sure you want to delete this product?");
        if (confirmDelete) {
            $.ajax({
                type:"POST",
                //url: '/Product/Delete',
                	url: '@Url.Action("Delete", "Product")',
                data: {
                    Id: $(this).attr("data-id")
                }

             })
         .done(function (response) {
             $("#tableContiner").html(response);
             })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
           alert("fail");
            });
        }

    });

    var products = [];
    $(".addtoCart").click(function () {
        var productID = $(this).attr("data-id")
        products.push(productID)
        $.cookie('CartProducts', products.join('-'), {path:'/'});
        alert('product added to cart');
    });
</script>
