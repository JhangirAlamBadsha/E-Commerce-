@model  ShopViewModel
@using MVT.Web.Code

@{
    ViewBag.Title = "Index";
    //var defaultImageURL = "/Content/images/system/placeholder-image.png";
}


<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Slidebar Shop</h1>
                </div><!-- /.page-title-heading -->
                <div class="breadcrumbs">
                    <ul>
                        <li><a href="index.html">Home</a></li>
                        <li><a href="shop-3col.html">Shop</a></li>
                        <li><a href="shop-3col-slide.html">Slidebarshop</a></li>
                    </ul>
                </div><!-- /.breadcrumbs -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index","Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="" name="searchTerm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h2 class="widget-title">
                            Sort By
                        </h2>
                        <ul>

                            <li><a style="color :white;" data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Default, categoryID = Model.categoryID })" class=" btn btn-danger dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty) ">Default - Newest</a></li>
                            <li><a style="color :white;" data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryID = Model.categoryID })" class="btn btn-danger dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a style="color :white;" data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryID = Model.categoryID })" class=" btn btn-danger dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh? "active" : string.Empty : string.Empty) ">Price: low to high</a> </li>
                            <li><a style="color :white;" data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow, categoryID = Model.categoryID })" class="btn btn-danger dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty) ">Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->

                    <div class="widget widget_tag">
                        <h2 class="widget-title">
                            Featured categorires
                        </h2>
                        <div class="tag-list" >
                            @foreach (var category in Model.FeaturedCategories)
                            {
                                <a   data-href="@Url.Action("FilterProducts", "Shop", new { categoryID = category.ID, sortBy = Model.SortBy })" class=" btn btn-danger dataLink @(Model.categoryID.HasValue &&Model.categoryID.Value==category.ID ? "active" :string.Empty)">@category.Name</a>

                            }

                        </div>
                    </div>
                    <div class="widget widget-price">
                        <h2 class="widget-title">Filter by price</h2>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div><!-- /.widget -->
                    <a href="@Url.Action("Index", "Shop")" class="btn btn-danger">Reset Filters</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->

            <div class="col-md-9">
                <div id="productsdiv">
                    @{
                        var filterProductsViewModel = new FilterProductsViewModel();
                        filterProductsViewModel.Products = Model.Products;
                        filterProductsViewModel.Pager = Model.Pager;
                        filterProductsViewModel.categoryID = Model.categoryID;
                        filterProductsViewModel.SortBy = Model.SortBy;


                        Html.RenderPartial("FilterProducts", filterProductsViewModel);
                    }
                </div>



            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->


<script>
    var callTimeout;
    var priceSlider = $("#slide-range").slider({
        range: true,
        min: 0,
        max: @Model.MaximumPrice,
        values: [0, @Model.MaximumPrice],
        slide: function (event, ui) {

            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];

            $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");
            //GetData(minPrice,maxPrice);
            clearTimeout(callTimeout);
            callTimeout = setTimeout(PriceRangeChange,2000);
        }
    });
    $(".dataLink ").click(function () {
        var url = $(this).attr("data-href");

        if (url != "" || url != undefined) {
            GetData(url);
        }
    });

    function GetData(dUrl){

        $.ajax({

            url:dUrl,
            data: {
                @*//categoryID:'@Model.categoryID',*@
                minimumPrice : priceSlider.slider("values", 0),
                maximumPrice : priceSlider.slider("values", 1)
            }
        })
        .done(function (response) {

            $("#productsdiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {

            alert("FAIL");
        })

    }
    function PriceRangeChange(){

        $.ajax({

            url:'@Url.Action("FilterProducts","Shop")',
            data: {
                @*sortBy:'@Model.SortBy',
                categoryID:'@Model.categoryID',*@
                searchTerm: $("#SearchTerm").val(),
                sortBy: $("#SortBy").val(),
                categoryID: $("#CategoryID").val(),
                minimumPrice : priceSlider.slider("values", 0),
                maximumPrice : priceSlider.slider("values", 1)
    }
    })
        .done(function (response) {

            $("#productsdiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {

            alert("FAIL");
        })

    }

</script>